services:
  app:
    image: ${APP_IMAGE:-local/app}
    ports:
      - "8080:8080"
    environment:
      - ERE_DB_URL=jdbc:mariadb://mariadb:3306/ere
      - ERE_DB_USER=ere
      - ERE_DB_PASS=${APP_DB_PASSWORD}
    depends_on:
      mariadb:
        condition: service_healthy
    restart: always
    networks:
      - app-network
  mariadb:
    image: mariadb:11.7
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=ere
      - MYSQL_USER=ere
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - mariadb_data:/var/lib/mysql
    ports:
      - "3309:3306"
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - app-network
  nginx:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    environment:
      - DEFAULT_HOST=${DOMAIN_NAME}
      - VIRTUAL_HOST=ere.ferderer.de
      - VIRTUAL_PORT=8080
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - nginx_certs:/etc/nginx/certs
      - nginx_vhost:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
    depends_on:
      - app
    restart: always
    networks:
      - app-network
  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    environment:
      - NGINX_PROXY_CONTAINER=nginx
      - VIRTUAL_HOST=ere.ferderer.de
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - nginx_certs:/etc/nginx/certs
      - nginx_vhost:/etc/nginx/vhost.d
      - nginx_html:/usr/share/nginx/html
    depends_on:
      - nginx
    restart: always
    networks:
      - app-network
volumes:
  mariadb_data:
  nginx_certs:
  nginx_vhost:
  nginx_html:
networks:
  app-network:
    driver: bridge
