name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Build JAR with Maven
      - name: Build with Maven
        run: mvn clean package -DskipTests
        working-directory: .

      # Log in to GitHub Container Registry
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      # Build and push Docker image
      - name: Build and push Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/app:latest .
          docker push ghcr.io/${{ github.repository }}/app:latest

      # Set up SSH key
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to VPS
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USERNAME: ${{ secrets.VPS_USERNAME }}
        run: |
          ssh -o StrictHostKeyChecking=no $VPS_USERNAME@$VPS_HOST << EOF
            export APP_IMAGE=ghcr.io/${{ github.repository }}/app:latest
            echo "APP_IMAGE: \$APP_IMAGE"

            # Login to GHCR on VPS
            echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            docker compose -f ~/docker-compose.yml pull app
            docker compose -f ~/docker-compose.yml up -d --force-recreate app
          EOF
